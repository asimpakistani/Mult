#include <stdio.h>

void get_values_of_matrix(int matrix[][10],int rows,int columns)//function for taking values of a matrix from the user//
{
    printf("\n enter values\n");
    for (int i=0; i<rows;++i)
    {
        for(int j=0; j<columns; ++j)
        {
            printf("enter a%d%d: ",i+1,j+1);
        scanf("%d",&matrix[i][j]);
        }
    }
    
}
void multiplication_of_matrix(int first_matrix[][10], int second_matrix[][10],int result_matrix[][10], int r1,int r2,int c1,int c2)//function for multiplication of 2d matrices//
{
    for (int i=0; i<r1;++i)
    {
        for(int j=0; j<c2; ++j)
        {
            result_matrix[i][j]=0; //set every value of result matrix to zero for logic to work//
        }
    }
    
    for (int i=0; i<r1;++i)
    {
        for(int j=0; j<c2; ++j)
        {
            for (int k=0; k<c1; ++k)
            {
                result_matrix[i][j]=result_matrix[i][j]+first_matrix[i][k]*second_matrix[k][j];// our main logic//
            }
        }
    }
}

int main ()
{
    int A[10][10], B[10][10], r1,c1,r2,c2,C[10][10];
    printf("enter no of rows and columns of first matrix: ");
    scanf("%d %d", &r1, &c1);
    printf("enter no of rows and columns of second matrix: ");
    scanf("%d %d", &r2, &c2);
    while (c1!=r2)
    {
        printf("Error!, pls again enter\n");
        printf("enter no of rows and columns of first matrix: ");
    scanf("%d %d", &r1, &c1);
    printf("enter no of rows and columns of second matrix: ");
    scanf("%d %d", &r2, &c2);
    }
    
    printf("give values of first matrix: ");
    get_values_of_matrix(A,r1,c1);
       printf("give values of second matrix: ");
    get_values_of_matrix(B,r2,c2);
    
    multiplication_of_matrix(A,B,C,r1,r2,c1,c2);
    
    printf("the resultant matrix is: \n");
    for (int i=0; i<r1;++i)
    {
        for(int j=0; j<c2; ++j)
        {
            printf("%d  ", C[i][j]);
            if (j==c2-1)
            {
                printf("\n");
            }
        }
    }
    return 0;
}